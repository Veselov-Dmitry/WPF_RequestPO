<ResourceDictionary 
    x:Class="Request.Styles.CustomizedWindow.VS2012WindowStyle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
    <!--ICON AND FRAME STYLE-->
    <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#EFEFF2" /> <!--ФОН ОКНА-->
    <SolidColorBrush x:Key="VS2012WindowBorderBrush" Color="#99cc99" />
    <SolidColorBrush x:Key="VS2012WindowBorderBrushInactive" Color="#999999" />
    <SolidColorBrush x:Key="VS2012WindowStatusForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="VS2012WindowStatusForegroundInactive" Color="#FFFFFF" />

    <Style x:Key="VS2012WindowStyleTitleBarButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent"
                            />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource VS2012WindowBorderBrush}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2012WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <!--
                    7 is a magic number. By default Windows fits a maximized window with Margin
                    7 7 7 7 to fill entire screen (WPF .Net 4.5). Larger numbers produce a gap
                    between maximized window and screen edges; smaller numbers show parts of
                    the window outside of the current monitor on multi-display computers.
                    -->
                    <Grid
                        Margin="7">
                        <!--TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display"-->
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="#EFEFF2"
                            BorderBrush="{StaticResource VS2012WindowBorderBrush}"
                            BorderThickness="1"
                            Padding="0">
                            <Border.Effect>
                                <DropShadowEffect
                                    Color="black"
                                    Opacity="0.5"
                                    BlurRadius="7"
                                    ShadowDepth="2"
                                    Direction="315"/>
                            </Border.Effect>
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch"
                                >
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{StaticResource TitleBarBackgroundBrush}"
                                    BorderThickness="0"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove"
                                    >
                                    <Grid Height="32">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="36"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                        </Grid.ColumnDefinitions>
                                        <Image
                                            x:Name="Icon"
                                            Grid.Column="0"
                                            Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                            HorizontalAlignment="Right"
                                            Margin="4,-7,0,7"
                                            Width="32"
                                            Height="32"
                                            MouseLeftButtonDown="IconMouseLeftButtonDown"
                                            />
                                        <TextBlock
                                            x:Name="Caption"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="4,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Opacity="0.66"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            />
                                        <Button
                                            x:Name="MinButton" 
                                            Grid.Column="2"
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="MinButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                                    />
                                            </Grid>
                                        </Button>
                                        <Button
                                            Grid.Column="3"
                                            x:Name="MaxButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="MaxButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    x:Name="PART_MaxButton_Path"
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"
                                                    />
                                            </Grid>
                                        </Button>
                                        <Button
                                            Grid.Column="4"
                                            x:Name="CloseButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="CloseButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1.5"
                                                    Stretch="None"
                                                    Data="M0,0 L8,8 M0,8 L8,0"
                                                    />
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter />
                            </DockPanel>
                        </Border>
                        <Line
                            MouseDown="OnSizeNorth"
                            x:Name="lnSizeNorth"
                            Stroke="Transparent"   
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="1"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeSouth"
                            x:Name="lnSizeSouth"
                            Stroke="Transparent"
                            VerticalAlignment="Bottom" 
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeWest"
                            x:Name="lnSizeWest"
                            Stroke="Transparent"
                            Cursor="SizeWE"
                            X1="1" X2="1" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeEast"
                            x:Name="lnSizeEast"
                            Stroke="Transparent"
                            HorizontalAlignment="Right" 
                            Cursor="SizeWE"
                            X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Rectangle MouseDown="OnSizeNorthWest" x:Name="rectSizeNorthWest" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeNorthEast" x:Name="rectSizeNorthEast" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Right" />
                        <Rectangle MouseDown="OnSizeSouthWest" x:Name="rectSizeSouthWest" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeSouthEast" x:Name="rectSizeSouthEast" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource VS2012WindowBorderBrushInactive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForeground}" />
                        <Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForegroundInactive}" />
                        <Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrushInactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <!--RADIO BUTTON STYLE-->    
    <SolidColorBrush x:Key="PhoneForegroundBrush" Color="#666633" /><!--цвет при нажатой кнопке и цвет галочки-->    
    <SolidColorBrush x:Key="PhoneRadioCheckBoxBrush" Color="#ffffff" /><!--бэкграунд?-->    
    <SolidColorBrush x:Key="PhoneDisabledBrush" Color="#cccccc" /><!--PhoneDisabledBrush цвет неактивных кнопок-->    
    <SolidColorBrush x:Key="PhoneAccentBrush" Color="#99CC99" /><!--цвет рамки выбора-->
    <SolidColorBrush x:Key="PhoneButtonBasePressedForegroundBrush" Color="#ff0000" />    
    <FontFamily x:Key="PhoneFontFamilySemiBold">Arial</FontFamily>
    <FontFamily x:Key="PhoneFontFamilyNormal">Arial</FontFamily>
    <sys:Double x:Key="PhoneFontSizeMedium">16</sys:Double>   
    <Thickness x:Key="PhoneTouchTargetLargeOverhang" Left="15" Top="0" Right="0" Bottom="0" /> <!--внешнее расстояние-->
    <Thickness x:Key="PhoneTouchTargetOverhang" Left="0" Top="0" Right="0" Bottom="0" />
    <Thickness x:Key="PhoneBorderThickness" Left="0" Top="0" Right="0" Bottom="0" />

    <Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}" />
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}" />
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
        <!--<Setter Property="Padding" Value="10,5,10,6" />-->
        <Setter Property="Padding" Value="10,5,10,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource PhoneButtonBasePressedForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                       Storyboard.TargetName="ButtonBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource PhoneAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource PhoneDisabledBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                       Storyboard.TargetName="ButtonBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource PhoneDisabledBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                       Storyboard.TargetName="ButtonBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ButtonBackground"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                Margin="{StaticResource PhoneTouchTargetOverhang}">
                            <ContentControl x:Name="ContentContainer"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}"
                                            Foreground="{TemplateBinding Foreground}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Padding="{TemplateBinding Padding}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PhoneRadioButtonCheckBoxBase" BasedOn="{StaticResource PhoneButtonBase}" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource PhoneRadioCheckBoxBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}" />
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="Win8RadioButton" BasedOn="{StaticResource PhoneRadioButtonCheckBoxBase}" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0"
                                                         To="0" />
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Foreground"
                                            Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource PhoneDisabledBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0"
                                                         To="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0"
                                                         To="1" />
                                        <DoubleAnimation Storyboard.TargetName="CornerPath"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0"
                                                         To="1" />
                                        <DoubleAnimation Storyboard.TargetName="CheckPath"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Foreground"
                                            Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource PhoneDisabledBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates" />
                            <VisualStateGroup x:Name="FocusStates" />
                        </VisualStateManager.VisualStateGroups>
                        <!--@@@@@@@@@@@@ CONTENT CONTROL-->
                        <Grid Margin="{StaticResource PhoneTouchTargetLargeOverhang}">
                            <ContentControl x:Name="ContentContainer"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}"
                                            Foreground="{TemplateBinding Foreground}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="15,15,30,0"
                                            Padding="{TemplateBinding Padding}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>                                            

                        <!-- Check elements grid -->
                        <Grid x:Name="CheckElements" Margin="{StaticResource PhoneTouchTargetLargeOverhang}">
                            <Border x:Name="NormalBorder"
                                    BorderThickness="3"
                                    BorderBrush="{StaticResource PhoneDisabledBrush}"
                                    Opacity="1" />
                            <Border x:Name="CheckedBorder"
                                    BorderThickness="3"
                                    BorderBrush="{StaticResource PhoneAccentBrush}"
                                    Opacity="0" />
                            <Border x:Name="PressedBorder"
                                    BorderThickness="3"
                                    BorderBrush="{TemplateBinding Foreground}"
                                    Opacity="0" />
                            <Path x:Name="CornerPath"
                                  Data="M100,0 L150,50 L150,0 z"
                                  HorizontalAlignment="Right"
                                  Height="50"
                                  Margin="0"
                                  Stretch="Fill"
                                  Fill="{StaticResource PhoneAccentBrush}"
                                  UseLayoutRounding="False"
                                  VerticalAlignment="Top"
                                  Width="50"
                                  Opacity="0" />
                            <Path x:Name="CheckPath"
                                  Data="M126.535,17.4311 L134.303,24.8724 L144.014,9.35659"
                                  HorizontalAlignment="Right"
                                  Height="16.25"
                                  Margin="0,6.375,6,0"
                                  Stretch="Fill"
                                  UseLayoutRounding="False"
                                  VerticalAlignment="Top"
                                  Width="18.625"
                                  Stroke="{StaticResource PhoneForegroundBrush}"
                                  StrokeThickness="4"
                                  Opacity="0" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    <!--CHECKBOX-->

    <SolidColorBrush x:Key="NormalBrush" Color="#FFFFFF" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FFFFFF" />
    <SolidColorBrush x:Key="IsEnabledFalseBrush" Color="#CCCCCC" />

    <Thickness x:Key="MarginThicknessCheckBox" Left="5" Top="0" Right="0" Bottom="0" /> <!--марджин в правах-->        
    <Style x:Key="DiscreteCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="FontFamily" Value="Arual"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="Margin" Value="{StaticResource MarginThicknessCheckBox}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border>
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"  />
                            <Border>
                                <Border.Background>
                                    <VisualBrush Opacity="1.0" Stretch="None">
                                        <VisualBrush.Visual>
                                            <Path Name="path" Opacity="0.1" Data="M 0 5 L 3 10 10 0" Stroke="#FF3838BA" StrokeThickness="1.5"
	                                    StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Opacity" Value="1.0" />
                            <Setter TargetName="path" Property="Stroke" Value="#FF70A16F" />
                            <Setter TargetName="path" Property="StrokeThickness" Value="2.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource IsEnabledFalseBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
	 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BuroTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Arial"/>
    </Style>
    
    
    <!--GRID-->

    <Style x:Key="HederGridLabelText" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="RightsHeaderWrapPanel" TargetType="{x:Type WrapPanel}">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="1,0,0,1"/>
    </Style>
    <Style x:Key="RightsHeaderTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="{StaticResource MarginThicknessCheckBox}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="13"/>
    </Style>
    <!--TEXTBOX-->
    <Style x:Key="TwitterTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="Trebuchet MS" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#e3e3e3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="DisabledOn">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="DisabledOff">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <!--<Grid>
                        <Border Margin="3" x:Name="BorderBase" 
                                Background="{TemplateBinding Background}"-->                                 
                    <Grid>
                            <Border Margin="3" x:Name="BorderBase" 
                                Background="White" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
                        <Border Margin="0" Background="#FFECF5FD" x:Name="FocusVisualElement" BorderBrush="#FFECF5FD" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="7" IsHitTestVisible="False" Opacity="0" >
                            <Border Background="#FFE3F1FC" x:Name="InnerFocusVisualElement" BorderBrush="#FFE3F1FC" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" IsHitTestVisible="False" Opacity="1" >
                                <Border Background="#FFD9ECFA" x:Name="InnerFocusVisualElement2" BorderBrush="#FFD9ECFA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Opacity="1" >
                                    <Border Background="{TemplateBinding Background}" x:Name="InnerFocusVisualElement3" BorderBrush="#FF7DBEF1" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Opacity="1" >
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                        <Label Foreground="DimGray"  Grid.Column="1" Margin="3" x:Name="TextPrompt" Content="{TemplateBinding Tag}" Visibility="Collapsed" Focusable="False"></Label>
                        <ScrollViewer Margin="1" x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}" Visibility="Visible">
                            
                        </ScrollViewer>
                        <Border Margin="3" x:Name="DisabledVisualElement" Background="#A5FFFFFF" BorderBrush="#59C0C0C0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" IsHitTestVisible="False" Visibility="Collapsed" />
                        <Border Margin="3" x:Name="ReadOnlyVisualElement" Background="#66FFFFFF" CornerRadius="2.75" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"></Condition>
                                <Condition Property="Text" Value=""></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="TextPrompt" Value="Visible"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DisabledOn}" x:Name="DisabledOn_BeginStoryboard" />
                            </Trigger.EnterActions>

                            <Setter Property="Foreground" Value="Silver" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DisabledOff}" />
                            </Trigger.EnterActions>

                            <Setter Property="Foreground" Value="#FF000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LICTBOX-->
    <Style x:Key="WarpPOutListBox" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="{Binding usersRow002}"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="BorderBrush" Value="Azure"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="UsersListBox" TargetType="{x:Type ListBox}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0.1"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    </Style>
    <Style x:Key="UsersListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="LimeGreen"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="LightGoldenrodYellow"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#99cc99"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--SCROLLBAR-->
    <!--BUTTONS-->
    <Style x:Key="Buttons" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" CornerRadius="1" Margin="4" BorderThickness="1" BorderBrush="Gray" Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background" Value="#99CC99"/>
                            
                            <!--<Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush>
                                        <SolidColorBrush.Color>
                                            <Color A="255" R="176" G="196" B="222"/>
                                        </SolidColorBrush.Color>
                                    </SolidColorBrush>
                                </Setter.Value>
                            </Setter>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>                                 
                                            <SolidColorBrush>
                                                <SolidColorBrush.Color>
                                                    <Color A="255" R="176" G="196" B="222"/>
                                                </SolidColorBrush.Color>
                                            </SolidColorBrush>
                                </Setter.Value>
                            </Setter>-->
                            <Setter TargetName="bdr_main" Property="BorderBrush" Value="DarkBlue"/>
                            <Setter TargetName="bdr_main" Property="Background" Value="#99bb99"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>                                 
                                            <SolidColorBrush>
                                                <SolidColorBrush.Color>
                                                    <Color A="255" R="176" G="196" B="222"/>
                                                </SolidColorBrush.Color>
                                            </SolidColorBrush>
                                </Setter.Value>
                            </Setter>-->
                            <Setter TargetName="bdr_main" Property="BorderBrush" Value="DarkBlue"/>
                            <Setter TargetName="bdr_main" Property="Background" Value="#78dd78"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>
